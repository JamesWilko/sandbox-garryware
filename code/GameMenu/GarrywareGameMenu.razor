@using System
@using Sandbox;
@using Sandbox.Menu
@using Sandbox.UI;
@using Sandbox.UI.GameMenu
@attribute [StyleSheet]
@inherits Sandbox.UI.NavHostPanel
@implements Sandbox.Menu.IGameMenuPanel
@namespace Garryware.UI.GameMenu

<root class="gamemainmenu">

    <div class="navigator-canvas" slot="navigator-canvas"></div>
    <LoadingOverlay></LoadingOverlay>

</root>

@code
{
    private static ILobby lobbyInstance;
    public static ILobby Lobby
    {
        get
        {
            if (lobbyInstance == null && Game.Menu.Lobby != null)
            {
                lobbyInstance = Game.Menu.Lobby;
            }
            return lobbyInstance;
        }
        set => lobbyInstance = value;
    }
    
    public GarrywareGameMenu()
    {
        DefaultUrl = "/";

        AddDestination("/", typeof(GarrywareFrontPage));
        AddDestination("/lobby", typeof(GarrywareLobby));
        AddDestination("/active", typeof(ActivePage));
        AddDestination("/settings", typeof(SettingsPage));

        if (Game.InGame) Navigate("/active");

        BindClass( "ingame", () => Game.InGame );
        BindClass( "inlobby", () => Game.Menu?.Lobby != null);
    }

    protected override void OnEvent( PanelEvent e )
    {
        if ( e.Name == "package.changed" )
        {
            StateHasChanged();
            return;
        }

        base.OnEvent( e );
    }

    [GameEvent.Menu.ServerJoined]
    public void OnServerJoined() => Navigate("/active");

    [GameEvent.Menu.LobbyJoined]
    public void OnLobbyJoined() => Navigate("/lobby");

    [GameEvent.Menu.LobbyLeave]
    public void OnLobbyLeave() => Navigate("/");

    [GameEvent.Menu.ServerLeave]
    public void OnServerLeave() => Navigate("/");
}